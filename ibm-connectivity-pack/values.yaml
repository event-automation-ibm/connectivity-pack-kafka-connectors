###############################################################################
#
# Â© Copyright IBM Corp. 2024
#
###############################################################################
# Default values for IBM Connectivity pack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
skipHooks: false
namespace: ''
license:
  accept: false
replicaCount: 1 # Replica of the POD
bunyan: "'{\"loglevel\" : \"info\", \"logsrc\" : true, \"logstdouttext\" : {}}'" # Override Log configuration
environmentVariables: {} # Yaml object ENV to be added on action and event pods
enableRefreshTokenMode: false
annotations:
  productID: "0c44732a8b794b2d9e9b842b2dfc8361"
  productName: "IBM Connectivity Pack - Free"
  productMetric: "FREE"
  productChargedContainers: "All"
image:
  registry: cp.icr.io # Image registry base URL
  path: cp/ibm-eventstreams
  imagePullSecretName: '' # Image pull secret name if already  exist please specify here else give below values for creating new Image pull secret
  imagePullEmail: dummyEmail # Image pull secret email ID
  imagePullUsername: iamapikey # Image pull username 
  imagePullPassword: ibm-entitlement-key # Image pull password 
certificate:
  enable: true # Enable MTLS or TLS
  MTLSenable: true # Enable MTLS if true else fallback to TLS
  generate: true # generate new certificates use this for certificate rotation
  clientSecretName: '' # If MTLS/TLS secret for client already exist please specify here
  clientCertPropertyName: 'tls.crt'
  clientCertKeyPropertyName: 'tls.key'
  clientCertPKCSPropertyName: 'pkcs.p12'
  serverSecretName: '' # If MTLS/TLS secret for server already exist please specify here
  serverCertPropertyName: 'tls.crt'
  serverCertKeyPropertyName: 'tls.key'
  caCertPropertyName: 'ca.crt'
  pkcsPassword: '' # pkcs.p12 password
route:
  enable: false # generate OpenShift route for external access
  domain: 'example.com' # subdomain of OpenShift cluster where connector service is being deployed
basicAuth:
  enable: false # Enable basic auth for service 
  username: 'csuser'
preHook:
  image: connectivity-pack-prehook
  digest: sha256:8d4c21d45c8030cff35cc2e65c36567b20805691946ebde5442a8b0d5bb35929
  tag: 3.0.0
proxy:
  name: connectivity-pack-proxy
  image: connectivity-pack-proxy
  digest: sha256:708c72ca56391e6d336bc549546788aee66985a25c39880dd11ebd136b1c9ccd
  tag: 3.0.0
action:
  name: action-connectors
  fileStreamingTimeout: '120000'
  udaPersistentVolumeClaimName: ''
  maxFileSize: '262144000'
  image: action-connectors
  digest: sha256:cbe955a55b1652b408c7622699dbf657cf6137dcd1eca97e9bb70ffb424c6695
  resources: # Update below value for vertical scaling of container
    limits:
      cpu: '1'
      ephemeral-storage: 10Gi
      memory: 512Mi
    requests:
      cpu: 250m
      ephemeral-storage: 5Gi
      memory: 256Mi
  tag: 3.0.0
event:
  enable: true # Set to true if Event container is needed
  name: event-connectors
  image: event-connectors # Update image
  digest: sha256:2b116da33ce5202035374d1443e4af66e04223f174e033fbaf555df6aa6224aa
  resources: # Update below value for vertical scaling of container
    limits:
      cpu: '1'
      ephemeral-storage: 10Gi
      memory: 750Mi
    requests:
      cpu: 250m
      ephemeral-storage: 5Gi
      memory: 400Mi
  tag: 3.0.0
javaservice:
  enable: false
autoScaling:
  enable: false # Update this to true to enable autoScaling
  minReplicas: 1 # What is the minimum replica needed
  maxReplicas: 5 # What is the maximum replica needed
  cpuUtilization: 70 # % of CPU utilization after which POD to be replicated 
  memoryUtilization: 70 # % of Memory utilization after which POD to be replicated 
securityContext:
  capabilities:
    drop:
      - ALL
  privileged: false
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
csCommon:
  eventList: "['salesforceevent','jira','github','googlecalendar','googlebigquery','servicenow']"
